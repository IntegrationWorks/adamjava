name: deploy-pipeline
run-name: ${{ github.repository }} deploy pipeline
on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: Image Tag
        default: latest
      helm-chart:
        type: string
        description: Helm Chart
        default: ./k8s-maven-0.0.1.tgz
      cluster:
        type: string
        description: Name of cluster to deploy to
      resource-group:
        type: string
        description: Name of resource-group in Azure to deploy to

env:
  IMAGE_HOST: ghcr.io
  IMAGE_PATH: ${{ github.repository }}
  IMAGE_TAG: ${{ github.event.inputs.image-tag }}
  APP_NAME: ${{ github.event.repository.name }}
  HELM_CHART: ${{ github.event.inputs.helm-chart }}
  AKS_CLUSTER_NAME: ${{ github.event.inputs.cluster }}
  AZ_RESOURCE_GROUP: ${{ github.event.inputs.resource-group }}
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{"clientId": "${{ env.ARM_CLIENT_ID}}", "clientSecret":"${{env.ARM_CLIENT_SECRET}}", "tenantId": "${{ env.ARM_TENANT_ID}}","subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID}}"}'

      - name: Update kube config
        run: az aks get-credentials --resource-group $AZ_RESOURCE_GROUP --name $AKS_CLUSTER_NAME

      - uses: actions/checkout@v4
        name: checkout helm repo
        with:
          repository: IntegrationWorks/helm-packaged-charts
          token: ${{ secrets.HELM_READ_ACCESS_TOKEN }} 

      - id: lower-case-vars
        run: |
          image_full=${{ env.IMAGE_HOST }}/${{ env.IMAGE_PATH }}
          app=${{ env.APP_NAME }}
          echo "image=${image_full,,}" >> $GITHUB_OUTPUT
          echo "release_name=${app,,}" >> $GITHUB_OUTPUT
          
      - name: Deploy
        run: |
          helm upgrade -i \
          ${{ steps.lower-case-vars.outputs.release_name  }} ${{ env.HELM_CHART }} \
          --set image.name=${{ steps.lower-case-vars.outputs.image }} \
          --set image.tag=${{ env.IMAGE_TAG }} --wait